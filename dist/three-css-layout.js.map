{"version":3,"file":"three-css-layout.js","sources":["../lib/utils/getDomElement.ts","../lib/utils/isTypePredicate.ts","../lib/CSSLayout.ts","../lib/utils/cssTransformToMatrix4.ts","../lib/utils/resetObjectTransform.ts","../lib/CSSLayoutObject.ts"],"sourcesContent":["export const getDomElement = (\n  domElement: string | HTMLElement,\n  type: string\n) => {\n  const element =\n    typeof domElement === \"string\"\n      ? document.querySelector<HTMLElement>(domElement)\n      : domElement;\n\n  if (!element) throw Error(`${type}: Invalid DOM element`);\n\n  return element;\n};\n","export const isTypePredicate = <Type extends Union, Union = any>(\n  object: Union,\n  isType: keyof Type\n): object is Type => !!(object as Type)?.[isType];\n","import {\n  Object3D,\n  Object3DEventMap,\n  Vector2,\n  type OrthographicCamera,\n  type PerspectiveCamera,\n} from \"three\";\nimport type { CSSLayoutObject } from \"./CSSLayoutObject\";\nimport { CSSLayout3DEventMap, CSSLayoutObjectFit } from \"./types\";\nimport { getDomElement } from \"./utils/getDomElement\";\nimport { isTypePredicate } from \"./utils/isTypePredicate\";\n\n/**\n * `CSSLayout` seamlessly adapts its child `CSSLayoutObject` objects to the referenced HTML layout,\n * efficiently manages there positioning, scaling and rotation, ensuring responsive and dynamic\n * layouts within a Three.js scene.\n */\nexport class CSSLayout extends Object3D<CSSLayout3DEventMap> {\n  type = \"CSSLayout\";\n  /** The main `HTMLElement` layout. */\n  domElement: HTMLElement;\n  readonly isCSSLayout = true;\n  readonly _layoutDomOffset = new Vector2();\n  readonly _positionOffset = new Vector2();\n  readonly _scaleFactor = new Vector2();\n  readonly _outerSize = new Vector2();\n  readonly _innerSize = new Vector2();\n  private _cssLayoutObjects: CSSLayoutObject[] = [];\n  private _scrollReference?: HTMLElement;\n  private _scrollListener?: () => void;\n\n  constructor(domElement: string | HTMLElement) {\n    super();\n    this.domElement = getDomElement(domElement, this.type);\n  }\n\n  /**\n   * Set layout `width` and `height` to fit the camera viewport.\n   * Typically used to overlay a `Scene` over an HTML layout.\n   *\n   * @param camera - The rendering camera\n   * @param fit -  Emulate the CSS's `object-fit` property, set to \"cover\" if you also need to map the layout scroll.\n   * @param lookAtCamera - set to true to rotate the layout toward the camera\n   * @returns this\n   */\n  fitCamera(\n    camera: PerspectiveCamera | OrthographicCamera,\n    fit: CSSLayoutObjectFit = \"fill\",\n    lookAtCamera: boolean = false\n  ) {\n    let width = 1;\n    let height = 1;\n\n    if (!!this._scrollListener) this.position.set(0, 0, this.position.z);\n\n    if (isTypePredicate<PerspectiveCamera>(camera, \"isPerspectiveCamera\")) {\n      const distance = camera.position.distanceTo(this.position);\n      const verticalFov = camera.fov * (Math.PI / 180);\n      height = 2 * Math.tan(verticalFov / 2) * distance;\n      width = height * camera.aspect;\n    } else {\n      width = (camera.right - camera.left) / camera.zoom;\n      height = (camera.top - camera.bottom) / camera.zoom;\n    }\n\n    if (lookAtCamera) this.lookAt(camera.position);\n\n    return this.fitPlane(width, height, fit);\n  }\n\n  /**\n   * Set ths `CSSLayout` dimensions to fit a plane defined by its `width` and `height`.\n   *\n   * @param width - The plane width\n   * @param height - The plane Height\n   * @param fit - Emulate the CSS's `object-fit` property, set to \"cover\" if you need to map the layout scroll.\n   * @returns this\n   */\n  fitPlane(width: number, height: number, fit: CSSLayoutObjectFit = \"cover\") {\n    this.dispatchEvent({ type: \"onBeforeFit\" });\n\n    let scrollLeft = 0;\n    let scrollTop = 0;\n\n    if (this._scrollListener) {\n      if (this._scrollReference) {\n        scrollLeft = this._scrollReference.scrollLeft;\n        scrollTop = this._scrollReference.scrollTop;\n      } else {\n        scrollLeft = window.screenX;\n        scrollTop = window.scrollY;\n      }\n    }\n\n    const {\n      width: layoutWidth,\n      height: layoutHeight,\n      left,\n      top,\n    } = this.domElement.getBoundingClientRect();\n\n    this._outerSize.set(layoutWidth, layoutHeight);\n    this._innerSize.set(width, height);\n    this._layoutDomOffset.set(left + layoutWidth / 2, top + layoutHeight / 2);\n    this._positionOffset.set(0, 0);\n    this._scaleFactor.set(width / layoutWidth, height / layoutHeight);\n\n    if (fit !== \"fill\") {\n      const ratio = Math[fit === \"contain\" ? \"min\" : \"max\"](\n        this._scaleFactor.x,\n        this._scaleFactor.y\n      );\n\n      this._scaleFactor.set(ratio, ratio);\n      this._outerSize.multiply(this._scaleFactor);\n\n      if (this._outerSize.x > width)\n        this._positionOffset.x = (this._outerSize.x - width) / -2;\n      else if (this._outerSize.y > height)\n        this._positionOffset.y = (this._outerSize.y - height) / 2;\n    } else this._outerSize.multiply(this._scaleFactor);\n\n    this.updateObjects(true);\n\n    if (this._scrollListener) {\n      if (this._scrollReference) {\n        this._scrollReference.scrollLeft = scrollLeft;\n        this._scrollReference.scrollTop = scrollTop;\n      } else window.scroll(0, 0);\n\n      this._scrollListener();\n    }\n\n    this.dispatchEvent({ type: \"onFit\" });\n\n    return this;\n  }\n\n  /**\n   * listen or stop listening the scroll event, and set the y position accordingly.\n   *\n   * @param listen - Boolean wither to listen or stop listening\n   * @param scrollElement - Optional if not set will listen the `window` scroll event.\n   * @returns this\n   */\n  scroll(listen: boolean, scrollElement?: string | HTMLElement) {\n    if (this._scrollListener) {\n      this.position.set(0, 0, this.position.z);\n      (this._scrollReference || window).removeEventListener(\n        \"scroll\",\n        this._scrollListener\n      );\n      delete this._scrollListener;\n      delete this._scrollReference;\n    }\n\n    if (!listen) return this;\n\n    if (scrollElement)\n      this._scrollReference = getDomElement(scrollElement, this.type);\n\n    this._scrollListener = () => {\n      const scrollX = this._scrollReference\n        ? (this._scrollReference as HTMLElement).scrollLeft\n        : window.scrollX;\n      const scrollY = this._scrollReference\n        ? (this._scrollReference as HTMLElement).scrollTop\n        : window.scrollY;\n\n      this.position.set(\n        -scrollX * this._scaleFactor.x,\n        scrollY * this._scaleFactor.y,\n        this.position.z\n      );\n    };\n\n    (this._scrollReference || window).addEventListener(\n      \"scroll\",\n      this._scrollListener\n    );\n\n    this._scrollListener();\n\n    return this;\n  }\n\n  /**\n   * Update all the `CSSLayoutObject` child objects transformations.\n   * Typically used inside the animation loop in conjunction with CSS keyframes animations or transitions.\n   * Both parameters are defaulted to false for performance.\n   *\n   * @param updateElements - If `true`, will recompute the related `HTMLElement`'s `clientBoundingBox` (less performant),\n   *                         otherwise will only compute the `transform` style.\n   * @param updateObjects - If `true`, will recompute the `Object3D`'s `boundingBox` (less performant).\n   * @returns this\n   */\n  updateObjects(\n    updateElements: boolean = false,\n    updateObjects: boolean = false\n  ) {\n    this._cssLayoutObjects.forEach((cssObject) =>\n      cssObject.fitLayout(updateElements, updateObjects)\n    );\n\n    return this;\n  }\n\n  add(...objects: Object3D<Object3DEventMap>[]): this {\n    super.add(...objects);\n    objects.forEach((object) => {\n      if (isTypePredicate<CSSLayoutObject>(object, \"isCSSLayoutObject\"))\n        this._cssLayoutObjects.push(object);\n    });\n    return this;\n  }\n\n  remove(...objects: Object3D<Object3DEventMap>[]): this {\n    super.remove(...objects);\n    objects.forEach((object) => {\n      const index = this._cssLayoutObjects.indexOf(object as CSSLayoutObject);\n      if (~index) this._cssLayoutObjects.splice(index, 1);\n    });\n    return this;\n  }\n\n  dispose() {\n    this.scroll(false);\n  }\n}\n","import type { Matrix4 } from \"three\";\n\nconst _domMatrix = new DOMMatrix();\n\nexport const cssTransformToMatrix4 = (transform: string, target: Matrix4) => {\n  _domMatrix.setMatrixValue(transform);\n  return target.set(\n    _domMatrix.m11,\n    -_domMatrix.m21,\n    _domMatrix.m31,\n    _domMatrix.m41,\n    -_domMatrix.m12,\n    _domMatrix.m22,\n    -_domMatrix.m32,\n    _domMatrix.m42,\n    _domMatrix.m13,\n    -_domMatrix.m23,\n    _domMatrix.m33,\n    _domMatrix.m43,\n    _domMatrix.m14,\n    _domMatrix.m24,\n    _domMatrix.m34,\n    _domMatrix.m44\n  );\n};\n","import type { Object3D } from \"three\";\n\nexport const resetObjectTransform = (object: Object3D) => {\n  object.position.set(0, 0, 0);\n  object.scale.set(1, 1, 1);\n  object.rotation.set(0, 0, 0);\n};\n","import {\n  Box3,\n  Matrix4,\n  Object3D,\n  Object3DEventMap,\n  Vector2,\n  Vector3,\n} from \"three\";\nimport type { CSSLayout } from \"./CSSLayout\";\nimport { BoundingRect, CSSLayout3DEventMap, CSSLayoutObjectFit } from \"./types\";\nimport { cssTransformToMatrix4 } from \"./utils/cssTransformToMatrix4\";\nimport { getDomElement } from \"./utils/getDomElement\";\nimport { resetObjectTransform } from \"./utils/resetObjectTransform\";\n\nconst _box3 = new Box3();\nconst _originMatrix = new Matrix4();\nconst _originPosition = new Vector3();\nconst _translate = new Vector3();\n\n/**\n * `CSSLayout`'s Child. Manages it self positioning, scaling and rotation in relation\n *  to the referenced `HTMLElement`.\n */\nexport class CSSLayoutObject extends Object3D<CSSLayout3DEventMap> {\n  type = \"CSSLayoutObject\";\n  /** Emulate CSS's `object-fit` property */\n  fit: CSSLayoutObjectFit = \"contain\";\n  /** The reference `HTMLElement` */\n  domElement: HTMLElement;\n  /** Set to `true` to recompute the `Object3D`'s `boundingBox` (less performant). */\n  objectNeedsUpdate?: boolean = true;\n  /** Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant) */\n  elementNeedsUpdate?: boolean = true;\n\n  readonly isCSSLayoutObject = true;\n  private _container = new Object3D();\n  private readonly _size = new Vector3();\n  private readonly _domBoundingRect: BoundingRect = [0, 0, 0, 0];\n  private readonly _boundingRectPosition: Vector3 = new Vector3();\n\n  /**\n   * `CSSLayout` child object will be mapped in reference to the domElement.\n   *\n   * @param domElement - the reference element, can be `HTMLElement` or a CSS querySelector string, example \"#my-3d-model\".\n   * @param fit - Emulate CSS's `object-fit` property.\n   */\n  constructor(\n    domElement: HTMLElement | string,\n    fit: CSSLayoutObjectFit = \"contain\"\n  ) {\n    super();\n    this.domElement = getDomElement(domElement, this.type);\n    this._container.parent = this;\n    this._container.name = \"container\";\n    this.children.push(this._container);\n    this.fit = fit;\n  }\n\n  /**\n   * Fit the object relative to its parent `CSSLayout` mapping the transformations of the referenced `HTMLElement`.\n   *\n   * @param updateElement - Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant)\n   * @param updateObject - Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant)\n   * @returns this\n   */\n  fitLayout(updateElement: boolean = false, updateObject: boolean = false) {\n    this.dispatchEvent({ type: \"onBeforeFit\" });\n\n    this.elementNeedsUpdate = updateElement || this.elementNeedsUpdate;\n    this.objectNeedsUpdate = updateObject || this.objectNeedsUpdate;\n\n    const parent = this.parent as CSSLayout;\n    if (!parent || !parent.isCSSLayout)\n      throw Error(`${this.type} require a parent of type \"CSSLayout\"`);\n\n    const layoutDomOffset = parent._layoutDomOffset;\n    const parentScaleFactor = parent._scaleFactor;\n    const parentPosOffset = parent._positionOffset;\n\n    const computedStyle = getComputedStyle(this.domElement);\n    const { transform, display } = computedStyle;\n\n    if (display === \"none\") {\n      this.visible = false;\n      return this;\n    }\n\n    this.visible = true;\n    resetObjectTransform(this);\n\n    if (transform === \"none\") {\n      this._updateElementBoundingRect(\n        this.domElement,\n        layoutDomOffset,\n        parentScaleFactor,\n        parentPosOffset\n      );\n      this.dispatchEvent({ type: \"onFit\" });\n      return this;\n    }\n\n    this._resetCSSTransform(\n      computedStyle,\n      layoutDomOffset,\n      parentScaleFactor,\n      parentPosOffset\n    );\n\n    const [top, left, width, height] = this._domBoundingRect;\n    const [halfWidth, halfHeight] = [width / 2, height / 2];\n\n    const [originX, originY] = computedStyle.transformOrigin\n      .split(\" \")\n      .map(parseFloat);\n\n    _translate.setFromMatrixPosition(_originMatrix).multiply({\n      x: parentScaleFactor.x,\n      y: -parentScaleFactor.y,\n      z: 1,\n    });\n\n    _originPosition\n      .set(\n        (left + halfWidth + originX - halfWidth - layoutDomOffset.x) *\n          parentScaleFactor.x -\n          parentPosOffset.x,\n        -(top + halfHeight + originY - halfHeight - layoutDomOffset.y) *\n          parentScaleFactor.y -\n          parentPosOffset.y,\n        0\n      )\n      .add(_translate);\n\n    _originMatrix.setPosition(_originPosition);\n\n    this.applyMatrix4(_originMatrix);\n\n    this._container.position\n      .copy(this._boundingRectPosition)\n      .sub(_originPosition)\n      .add(_translate)\n      .fromArray(\n        this._container.position.toArray().map((v) => parseFloat(v.toFixed(2)))\n      );\n\n    this.dispatchEvent({ type: \"onFit\" });\n\n    return this;\n  }\n\n  add(...objects: Object3D<Object3DEventMap>[]): this {\n    this._container.add(...objects);\n    return this;\n  }\n\n  remove(...objects: Object3D<Object3DEventMap>[]): this {\n    this._container.remove(...objects);\n    return this;\n  }\n\n  private _updateObjectBoundingBox() {\n    resetObjectTransform(this._container);\n\n    if (!this.objectNeedsUpdate) return;\n\n    _box3.setFromObject(this._container);\n    _box3.getSize(this._size);\n\n    this.objectNeedsUpdate = false;\n  }\n\n  private _updateElementBoundingRect(\n    element: HTMLElement,\n    domOffset: Vector2,\n    scaleFactor: Vector2,\n    posOffset: Vector2\n  ) {\n    if (!this.elementNeedsUpdate) return;\n\n    const container = this._container;\n\n    const { top, left, width, height } = element.getBoundingClientRect();\n\n    this._updateObjectBoundingBox();\n\n    (this._domBoundingRect as any).length = 0;\n    this._domBoundingRect.push(top, left, width, height);\n\n    container.position.set(\n      (left - domOffset.x + width / 2) * scaleFactor.x - posOffset.x,\n      -(top - domOffset.y + height / 2) * scaleFactor.y - posOffset.y,\n      0\n    );\n\n    this._boundingRectPosition.copy(container.position);\n\n    const fit = this.fit;\n    if (fit !== \"fill\") {\n      const ratio = Math[fit === \"contain\" ? \"min\" : \"max\"](\n        (width * scaleFactor.x) / this._size.x,\n        (height * scaleFactor.y) / this._size.y\n      );\n\n      container.scale.setScalar(ratio);\n    } else\n      container.scale.multiply({\n        x: (width * scaleFactor.x) / this._size.x,\n        y: (height * scaleFactor.y) / this._size.y,\n        z: this._size.z, // FIXME - Handle Z axis\n      });\n\n    this.elementNeedsUpdate = false;\n  }\n\n  private _resetCSSTransform(\n    computedStyle: CSSStyleDeclaration,\n    domOffset: Vector2,\n    scaleFactor: Vector2,\n    posOffset: Vector2\n  ) {\n    cssTransformToMatrix4(computedStyle.transform, _originMatrix);\n\n    if (!this.elementNeedsUpdate) return;\n\n    const element = this.domElement;\n    const style = element.style;\n\n    const { transform, animation, transition } = style;\n\n    const hasAnimation = computedStyle.animationName !== \"none\";\n    const hasTransition = !!parseFloat(computedStyle.transitionDuration);\n\n    style.transform = \"none\";\n    if (hasAnimation) style.animation = \"none\";\n    if (hasTransition) style.transition = \"none\";\n\n    this._updateElementBoundingRect(element, domOffset, scaleFactor, posOffset);\n\n    style.transform = transform;\n    if (hasAnimation) style.animation = animation;\n    if (hasTransition) style.transition = transition;\n  }\n}\n"],"names":["getDomElement","domElement","type","element","document","querySelector","Error","isTypePredicate","object","isType","CSSLayout","Object3D","super","isCSSLayout","_layoutDomOffset","Vector2","_positionOffset","_scaleFactor","_outerSize","_innerSize","_cssLayoutObjects","_scrollReference","_scrollListener","this","camera","fit","lookAtCamera","width","height","position","set","z","distance","distanceTo","verticalFov","fov","Math","PI","tan","aspect","right","left","zoom","top","bottom","lookAt","fitPlane","dispatchEvent","scrollLeft","scrollTop","window","screenX","scrollY","layoutWidth","layoutHeight","getBoundingClientRect","ratio","x","y","multiply","updateObjects","scroll","listen","scrollElement","removeEventListener","scrollX","addEventListener","updateElements","forEach","cssObject","fitLayout","objects","add","push","remove","index","indexOf","splice","dispose","_domMatrix","DOMMatrix","resetObjectTransform","scale","rotation","_box3","Box3","_originMatrix","Matrix4","_originPosition","Vector3","_translate","CSSLayoutObject","objectNeedsUpdate","elementNeedsUpdate","isCSSLayoutObject","_container","_size","_domBoundingRect","_boundingRectPosition","parent","name","children","updateElement","updateObject","layoutDomOffset","parentScaleFactor","parentPosOffset","computedStyle","getComputedStyle","transform","display","visible","_updateElementBoundingRect","_resetCSSTransform","halfWidth","halfHeight","originX","originY","transformOrigin","split","map","parseFloat","setFromMatrixPosition","setPosition","applyMatrix4","copy","sub","fromArray","toArray","v","toFixed","setFromObject","getSize","domOffset","scaleFactor","posOffset","container","_updateObjectBoundingBox","length","setScalar","target","setMatrixValue","m11","m21","m31","m41","m12","m22","m32","m42","m13","m23","m33","m43","m14","m24","m34","m44","style","animation","transition","hasAnimation","animationName","hasTransition","transitionDuration"],"mappings":"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"}