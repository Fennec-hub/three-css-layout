{"version":3,"file":"three-css-layout.umd.cjs","sources":["../lib/utils/getDomElement.ts","../lib/utils/isTypePredicate.ts","../lib/CSSLayout.ts","../lib/utils/cssTransformToMatrix4.ts","../lib/utils/resetObjectTransform.ts","../lib/CSSLayoutObject.ts"],"sourcesContent":["export const getDomElement = (\n  domElement: string | HTMLElement,\n  type: string\n) => {\n  const element =\n    typeof domElement === \"string\"\n      ? document.querySelector<HTMLElement>(domElement)\n      : domElement;\n\n  if (!element) throw Error(`${type}: Invalid DOM element`);\n\n  return element;\n};\n","export const isTypePredicate = <Type extends Union, Union = any>(\n  object: Union,\n  isType: keyof Type\n): object is Type => !!(object as Type)?.[isType];\n","import {\n  Object3D,\n  Object3DEventMap,\n  Vector2,\n  type OrthographicCamera,\n  type PerspectiveCamera,\n} from \"three\";\nimport type { CSSLayoutObject } from \"./CSSLayoutObject\";\nimport { CSSLayout3DEventMap, CSSLayoutObjectFit } from \"./types\";\nimport { getDomElement } from \"./utils/getDomElement\";\nimport { isTypePredicate } from \"./utils/isTypePredicate\";\n\n/**\n * `CSSLayout` seamlessly adapts its child `CSSLayoutObject` objects to the referenced HTML layout,\n * efficiently manages there positioning, scaling and rotation, ensuring responsive and dynamic\n * layouts within a Three.js scene.\n */\nexport class CSSLayout extends Object3D<CSSLayout3DEventMap> {\n  type = \"CSSLayout\";\n  /** The main `HTMLElement` layout. */\n  domElement: HTMLElement;\n  readonly isCSSLayout = true;\n  readonly _layoutDomOffset = new Vector2();\n  readonly _positionOffset = new Vector2();\n  readonly _scaleFactor = new Vector2();\n  readonly _outerSize = new Vector2();\n  readonly _innerSize = new Vector2();\n  private _cssLayoutObjects: CSSLayoutObject[] = [];\n  private _scrollReference?: HTMLElement;\n  private _scrollListener?: () => void;\n\n  constructor(domElement: string | HTMLElement) {\n    super();\n    this.domElement = getDomElement(domElement, this.type);\n  }\n\n  /**\n   * Set layout `width` and `height` to fit the camera viewport.\n   * Typically used to overlay a `Scene` over an HTML layout.\n   *\n   * @param camera - The rendering camera\n   * @param fit -  Emulate the CSS's `object-fit` property, set to \"cover\" if you also need to map the layout scroll.\n   * @param lookAtCamera - set to true to rotate the layout toward the camera\n   * @returns this\n   */\n  fitCamera(\n    camera: PerspectiveCamera | OrthographicCamera,\n    fit: CSSLayoutObjectFit = \"fill\",\n    lookAtCamera: boolean = false\n  ) {\n    let width = 1;\n    let height = 1;\n\n    if (!!this._scrollListener) this.position.set(0, 0, this.position.z);\n\n    if (isTypePredicate<PerspectiveCamera>(camera, \"isPerspectiveCamera\")) {\n      const distance = camera.position.distanceTo(this.position);\n      const verticalFov = camera.fov * (Math.PI / 180);\n      height = 2 * Math.tan(verticalFov / 2) * distance;\n      width = height * camera.aspect;\n    } else {\n      width = (camera.right - camera.left) / camera.zoom;\n      height = (camera.top - camera.bottom) / camera.zoom;\n    }\n\n    if (lookAtCamera) this.lookAt(camera.position);\n\n    return this.fitPlane(width, height, fit);\n  }\n\n  /**\n   * Set ths `CSSLayout` dimensions to fit a plane defined by its `width` and `height`.\n   *\n   * @param width - The plane width\n   * @param height - The plane Height\n   * @param fit - Emulate the CSS's `object-fit` property, set to \"cover\" if you need to map the layout scroll.\n   * @returns this\n   */\n  fitPlane(width: number, height: number, fit: CSSLayoutObjectFit = \"cover\") {\n    this.dispatchEvent({ type: \"onBeforeFit\" });\n\n    let scrollLeft = 0;\n    let scrollTop = 0;\n\n    if (this._scrollListener) {\n      if (this._scrollReference) {\n        scrollLeft = this._scrollReference.scrollLeft;\n        scrollTop = this._scrollReference.scrollTop;\n      } else {\n        scrollLeft = window.screenX;\n        scrollTop = window.scrollY;\n      }\n    }\n\n    const {\n      width: layoutWidth,\n      height: layoutHeight,\n      left,\n      top,\n    } = this.domElement.getBoundingClientRect();\n\n    this._outerSize.set(layoutWidth, layoutHeight);\n    this._innerSize.set(width, height);\n    this._layoutDomOffset.set(left + layoutWidth / 2, top + layoutHeight / 2);\n    this._positionOffset.set(0, 0);\n    this._scaleFactor.set(width / layoutWidth, height / layoutHeight);\n\n    if (fit !== \"fill\") {\n      const ratio = Math[fit === \"contain\" ? \"min\" : \"max\"](\n        this._scaleFactor.x,\n        this._scaleFactor.y\n      );\n\n      this._scaleFactor.set(ratio, ratio);\n      this._outerSize.multiply(this._scaleFactor);\n\n      if (this._outerSize.x > width)\n        this._positionOffset.x = (this._outerSize.x - width) / -2;\n      else if (this._outerSize.y > height)\n        this._positionOffset.y = (this._outerSize.y - height) / 2;\n    } else this._outerSize.multiply(this._scaleFactor);\n\n    this.updateObjects(true);\n\n    if (this._scrollListener) {\n      if (this._scrollReference) {\n        this._scrollReference.scrollLeft = scrollLeft;\n        this._scrollReference.scrollTop = scrollTop;\n      } else window.scroll(0, 0);\n\n      this._scrollListener();\n    }\n\n    this.dispatchEvent({ type: \"onFit\" });\n\n    return this;\n  }\n\n  /**\n   * listen or stop listening the scroll event, and set the y position accordingly.\n   *\n   * @param listen - Boolean wither to listen or stop listening\n   * @param scrollElement - Optional if not set will listen the `window` scroll event.\n   * @returns this\n   */\n  scroll(listen: boolean, scrollElement?: string | HTMLElement) {\n    if (this._scrollListener) {\n      this.position.set(0, 0, this.position.z);\n      (this._scrollReference || window).removeEventListener(\n        \"scroll\",\n        this._scrollListener\n      );\n      delete this._scrollListener;\n      delete this._scrollReference;\n    }\n\n    if (!listen) return this;\n\n    if (scrollElement)\n      this._scrollReference = getDomElement(scrollElement, this.type);\n\n    this._scrollListener = () => {\n      const scrollX = this._scrollReference\n        ? (this._scrollReference as HTMLElement).scrollLeft\n        : window.scrollX;\n      const scrollY = this._scrollReference\n        ? (this._scrollReference as HTMLElement).scrollTop\n        : window.scrollY;\n\n      this.position.set(\n        -scrollX * this._scaleFactor.x,\n        scrollY * this._scaleFactor.y,\n        this.position.z\n      );\n    };\n\n    (this._scrollReference || window).addEventListener(\n      \"scroll\",\n      this._scrollListener\n    );\n\n    this._scrollListener();\n\n    return this;\n  }\n\n  /**\n   * Update all the `CSSLayoutObject` child objects transformations.\n   * Typically used inside the animation loop in conjunction with CSS keyframes animations or transitions.\n   * Both parameters are defaulted to false for performance.\n   *\n   * @param updateElements - If `true`, will recompute the related `HTMLElement`'s `clientBoundingBox` (less performant),\n   *                         otherwise will only compute the `transform` style.\n   * @param updateObjects - If `true`, will recompute the `Object3D`'s `boundingBox` (less performant).\n   * @returns this\n   */\n  updateObjects(\n    updateElements: boolean = false,\n    updateObjects: boolean = false\n  ) {\n    this._cssLayoutObjects.forEach((cssObject) =>\n      cssObject.fitLayout(updateElements, updateObjects)\n    );\n\n    return this;\n  }\n\n  add(...objects: Object3D<Object3DEventMap>[]): this {\n    super.add(...objects);\n    objects.forEach((object) => {\n      if (isTypePredicate<CSSLayoutObject>(object, \"isCSSLayoutObject\"))\n        this._cssLayoutObjects.push(object);\n    });\n    return this;\n  }\n\n  remove(...objects: Object3D<Object3DEventMap>[]): this {\n    super.remove(...objects);\n    objects.forEach((object) => {\n      const index = this._cssLayoutObjects.indexOf(object as CSSLayoutObject);\n      if (~index) this._cssLayoutObjects.splice(index, 1);\n    });\n    return this;\n  }\n\n  dispose() {\n    this.scroll(false);\n  }\n}\n","import type { Matrix4 } from \"three\";\n\nconst _domMatrix = new DOMMatrix();\n\nexport const cssTransformToMatrix4 = (transform: string, target: Matrix4) => {\n  _domMatrix.setMatrixValue(transform);\n  return target.set(\n    _domMatrix.m11,\n    -_domMatrix.m21,\n    _domMatrix.m31,\n    _domMatrix.m41,\n    -_domMatrix.m12,\n    _domMatrix.m22,\n    -_domMatrix.m32,\n    _domMatrix.m42,\n    _domMatrix.m13,\n    -_domMatrix.m23,\n    _domMatrix.m33,\n    _domMatrix.m43,\n    _domMatrix.m14,\n    _domMatrix.m24,\n    _domMatrix.m34,\n    _domMatrix.m44\n  );\n};\n","import type { Object3D } from \"three\";\n\nexport const resetObjectTransform = (object: Object3D) => {\n  object.position.set(0, 0, 0);\n  object.scale.set(1, 1, 1);\n  object.rotation.set(0, 0, 0);\n};\n","import {\n  Box3,\n  Matrix4,\n  Object3D,\n  Object3DEventMap,\n  Vector2,\n  Vector3,\n} from \"three\";\nimport type { CSSLayout } from \"./CSSLayout\";\nimport { BoundingRect, CSSLayout3DEventMap, CSSLayoutObjectFit } from \"./types\";\nimport { cssTransformToMatrix4 } from \"./utils/cssTransformToMatrix4\";\nimport { getDomElement } from \"./utils/getDomElement\";\nimport { resetObjectTransform } from \"./utils/resetObjectTransform\";\n\nconst _box3 = new Box3();\nconst _originMatrix = new Matrix4();\nconst _originPosition = new Vector3();\nconst _translate = new Vector3();\n\n/**\n * `CSSLayout`'s Child. Manages it self positioning, scaling and rotation in relation\n *  to the referenced `HTMLElement`.\n */\nexport class CSSLayoutObject extends Object3D<CSSLayout3DEventMap> {\n  type = \"CSSLayoutObject\";\n  /** Emulate CSS's `object-fit` property */\n  fit: CSSLayoutObjectFit = \"contain\";\n  /** The reference `HTMLElement` */\n  domElement: HTMLElement;\n  /** Set to `true` to recompute the `Object3D`'s `boundingBox` (less performant). */\n  objectNeedsUpdate?: boolean = true;\n  /** Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant) */\n  elementNeedsUpdate?: boolean = true;\n\n  readonly isCSSLayoutObject = true;\n  private _container = new Object3D();\n  private readonly _size = new Vector3();\n  private readonly _domBoundingRect: BoundingRect = [0, 0, 0, 0];\n  private readonly _boundingRectPosition: Vector3 = new Vector3();\n\n  /**\n   * `CSSLayout` child object will be mapped in reference to the domElement.\n   *\n   * @param domElement - the reference element, can be `HTMLElement` or a CSS querySelector string, example \"#my-3d-model\".\n   * @param fit - Emulate CSS's `object-fit` property.\n   */\n  constructor(\n    domElement: HTMLElement | string,\n    fit: CSSLayoutObjectFit = \"contain\"\n  ) {\n    super();\n    this.domElement = getDomElement(domElement, this.type);\n    this._container.parent = this;\n    this._container.name = \"container\";\n    this.children.push(this._container);\n    this.fit = fit;\n  }\n\n  /**\n   * Fit the object relative to its parent `CSSLayout` mapping the transformations of the referenced `HTMLElement`.\n   *\n   * @param updateElement - Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant)\n   * @param updateObject - Set to `true` to recompute the related `HTMLElement`'s `clientBoundingBox` (less performant)\n   * @returns this\n   */\n  fitLayout(updateElement: boolean = false, updateObject: boolean = false) {\n    this.dispatchEvent({ type: \"onBeforeFit\" });\n\n    this.elementNeedsUpdate = updateElement || this.elementNeedsUpdate;\n    this.objectNeedsUpdate = updateObject || this.objectNeedsUpdate;\n\n    const parent = this.parent as CSSLayout;\n    if (!parent || !parent.isCSSLayout)\n      throw Error(`${this.type} require a parent of type \"CSSLayout\"`);\n\n    const layoutDomOffset = parent._layoutDomOffset;\n    const parentScaleFactor = parent._scaleFactor;\n    const parentPosOffset = parent._positionOffset;\n\n    const computedStyle = getComputedStyle(this.domElement);\n    const { transform, display } = computedStyle;\n\n    if (display === \"none\") {\n      this.visible = false;\n      return this;\n    }\n\n    this.visible = true;\n    resetObjectTransform(this);\n\n    if (transform === \"none\") {\n      this._updateElementBoundingRect(\n        this.domElement,\n        layoutDomOffset,\n        parentScaleFactor,\n        parentPosOffset\n      );\n      this.dispatchEvent({ type: \"onFit\" });\n      return this;\n    }\n\n    this._resetCSSTransform(\n      computedStyle,\n      layoutDomOffset,\n      parentScaleFactor,\n      parentPosOffset\n    );\n\n    const [top, left, width, height] = this._domBoundingRect;\n    const [halfWidth, halfHeight] = [width / 2, height / 2];\n\n    const [originX, originY] = computedStyle.transformOrigin\n      .split(\" \")\n      .map(parseFloat);\n\n    _translate.setFromMatrixPosition(_originMatrix).multiply({\n      x: parentScaleFactor.x,\n      y: -parentScaleFactor.y,\n      z: 1,\n    });\n\n    _originPosition\n      .set(\n        (left + halfWidth + originX - halfWidth - layoutDomOffset.x) *\n          parentScaleFactor.x -\n          parentPosOffset.x,\n        -(top + halfHeight + originY - halfHeight - layoutDomOffset.y) *\n          parentScaleFactor.y -\n          parentPosOffset.y,\n        0\n      )\n      .add(_translate);\n\n    _originMatrix.setPosition(_originPosition);\n\n    this.applyMatrix4(_originMatrix);\n\n    this._container.position\n      .copy(this._boundingRectPosition)\n      .sub(_originPosition)\n      .add(_translate)\n      .fromArray(\n        this._container.position.toArray().map((v) => parseFloat(v.toFixed(2)))\n      );\n\n    this.dispatchEvent({ type: \"onFit\" });\n\n    return this;\n  }\n\n  add(...objects: Object3D<Object3DEventMap>[]): this {\n    this._container.add(...objects);\n    return this;\n  }\n\n  remove(...objects: Object3D<Object3DEventMap>[]): this {\n    this._container.remove(...objects);\n    return this;\n  }\n\n  private _updateObjectBoundingBox() {\n    resetObjectTransform(this._container);\n\n    if (!this.objectNeedsUpdate) return;\n\n    _box3.setFromObject(this._container);\n    _box3.getSize(this._size);\n\n    this.objectNeedsUpdate = false;\n  }\n\n  private _updateElementBoundingRect(\n    element: HTMLElement,\n    domOffset: Vector2,\n    scaleFactor: Vector2,\n    posOffset: Vector2\n  ) {\n    if (!this.elementNeedsUpdate) return;\n\n    const container = this._container;\n\n    const { top, left, width, height } = element.getBoundingClientRect();\n\n    this._updateObjectBoundingBox();\n\n    (this._domBoundingRect as any).length = 0;\n    this._domBoundingRect.push(top, left, width, height);\n\n    container.position.set(\n      (left - domOffset.x + width / 2) * scaleFactor.x - posOffset.x,\n      -(top - domOffset.y + height / 2) * scaleFactor.y - posOffset.y,\n      0\n    );\n\n    this._boundingRectPosition.copy(container.position);\n\n    const fit = this.fit;\n    if (fit !== \"fill\") {\n      const ratio = Math[fit === \"contain\" ? \"min\" : \"max\"](\n        (width * scaleFactor.x) / this._size.x,\n        (height * scaleFactor.y) / this._size.y\n      );\n\n      container.scale.setScalar(ratio);\n    } else\n      container.scale.multiply({\n        x: (width * scaleFactor.x) / this._size.x,\n        y: (height * scaleFactor.y) / this._size.y,\n        z: this._size.z, // FIXME - Handle Z axis\n      });\n\n    this.elementNeedsUpdate = false;\n  }\n\n  private _resetCSSTransform(\n    computedStyle: CSSStyleDeclaration,\n    domOffset: Vector2,\n    scaleFactor: Vector2,\n    posOffset: Vector2\n  ) {\n    cssTransformToMatrix4(computedStyle.transform, _originMatrix);\n\n    if (!this.elementNeedsUpdate) return;\n\n    const element = this.domElement;\n    const style = element.style;\n\n    const { transform, animation, transition } = style;\n\n    const hasAnimation = computedStyle.animationName !== \"none\";\n    const hasTransition = !!parseFloat(computedStyle.transitionDuration);\n\n    style.transform = \"none\";\n    if (hasAnimation) style.animation = \"none\";\n    if (hasTransition) style.transition = \"none\";\n\n    this._updateElementBoundingRect(element, domOffset, scaleFactor, posOffset);\n\n    style.transform = transform;\n    if (hasAnimation) style.animation = animation;\n    if (hasTransition) style.transition = transition;\n  }\n}\n"],"names":["getDomElement","domElement","type","element","document","querySelector","Error","isTypePredicate","object","isType","CSSLayout","Object3D","constructor","super","__publicField","this","isCSSLayout","_layoutDomOffset","Vector2","_positionOffset","_scaleFactor","_outerSize","_innerSize","_cssLayoutObjects","_scrollReference","_scrollListener","fitCamera","camera","fit","lookAtCamera","width","height","position","set","z","distance","distanceTo","verticalFov","fov","Math","PI","tan","aspect","right","left","zoom","top","bottom","lookAt","fitPlane","dispatchEvent","scrollLeft","scrollTop","window","screenX","scrollY","layoutWidth","layoutHeight","getBoundingClientRect","ratio","x","y","multiply","updateObjects","scroll","listen","scrollElement","removeEventListener","scrollX","addEventListener","updateElements","forEach","cssObject","fitLayout","add","objects","push","remove","index","indexOf","splice","dispose","_domMatrix","DOMMatrix","resetObjectTransform","scale","rotation","_box3","Box3","_originMatrix","Matrix4","_originPosition","Vector3","_translate","CSSLayoutObject","objectNeedsUpdate","elementNeedsUpdate","isCSSLayoutObject","_container","_size","_domBoundingRect","_boundingRectPosition","parent","name","children","updateElement","updateObject","layoutDomOffset","parentScaleFactor","parentPosOffset","computedStyle","getComputedStyle","transform","display","visible","_updateElementBoundingRect","_resetCSSTransform","halfWidth","halfHeight","originX","originY","transformOrigin","split","map","parseFloat","setFromMatrixPosition","setPosition","applyMatrix4","copy","sub","fromArray","toArray","v","toFixed","_updateObjectBoundingBox","setFromObject","getSize","domOffset","scaleFactor","posOffset","container","length","setScalar","target","setMatrixValue","m11","m21","m31","m41","m12","m22","m32","m42","m13","m23","m33","m43","m14","m24","m34","m44","style","animation","transition","hasAnimation","animationName","hasTransition","transitionDuration"],"mappings":"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"}